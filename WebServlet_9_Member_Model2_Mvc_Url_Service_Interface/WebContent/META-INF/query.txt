1. DB에 테이블 만들기 
	create table mvcregister(
	 id number constraint pk_mvcregister_id primary key,
	 pwd varchar2(20) not null,
	 email varchar2(20) not null
	);

2. 패키지나누기 
	(src에 5개 패키지만들기 -> context.xml추가, ojdbc6.jar추가, UsingConnection.jsp로 DB연결 테스트!!)
	(pool만들기 (ConnectionHelper.java 파일복사해서사용)
	
3. 모델dto만들기
	DB테이블명과 똑같은 클래스를 만들고, 컬럼명과 같은 변수를 만든다. (getter, setter, 생성자, toStirng)
	
4. ado만들기

5. view는 디자인만 먼저 만들어 놓기(템플릿만)

6. controller만들기 
	servlet으로 하나만 만들어서 컨드롤한다! (*.do)


* controller 역할 :  요청을 받고 -> 판단해서 -> 서비스실행(DB, 암호화) -> 작업 
									      [dto생성, dao생성]
  - controller가 가지는 코딩 양이 많다.
  - 업무가 추가되거나 변경되었을 때 유지보수가 힘들다.
  
  [해결방안]
  서비스실행(DB, 암호화) <- 이부분을 service에게 위임(dto, dao, 암호화, 알고리즘 등)
  표준화된 설계방법(인터페이스 기반)으로
  kr.or.bit.action 패키지에 인터페이스를 설계
  
    
  
---------------------------------------------------------------------------------------------------------
회원가입 테이블
	create table mvcregister(
	 id number constraint pk_mvcregister_id primary key,
	 pwd varchar2(20) not null,
	 email varchar2(20) not null
	);

Model2 기반 MVC
MODEL
--DTO : mvcregister 테이블 같은 구조의 클래스 (getter , setter )구현
--DAO : CRUD 함수 (DB 연동 connection pool (DBCP))
--SERVICE 현재 생략

VIEW
--jsp (EL & JSTL)  > servlet 쪽에서 저장(request객체), view지정 , forward 한  데이터 가지고 출력
                   > ${requestScope.list}
--보안상 > WEB-INF > Register 폴더  관리

CONTROLLER
-- frontcontroller 역할  servlet (하나의 servlet 모든 요청 받고 처리)

--Client [요청을 받고] , [판단]하고 , 업무 수행 , 데이터 담고 , view 지정 , forward

판단   1. command 방식 :  servlet.do?cmd=login&id=kglim&pwd=1004   > cmd > if(cmd.equals("login"))
      2. url 방식 :      login.do?id=kglim&pwd=1004  :  login.do > url 주소로 요청을 판단

-------------------------------------------------------------------------------------------------------------------


